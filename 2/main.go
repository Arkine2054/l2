package main

import "fmt"

// Функция с именованным результатом,
// все манипуляции с именованной переменной внутри функции изменяют её и перезаписывают её значение
// return возвращает последний вариант переменной с учётом всех манипуляций
func test() (x int) {
	defer func() {
		x++
	}()
	x = 1
	return
}

// Функция без именованного результата, переменная создаётся внутри функции,
// в переменную x записывается 1,
// после чего выполняется defer, внутри происходит манипуляция с записанным значением x, которое = 1,
// но это не перезаписывает значение в переменной x,
// следовательно вернется 1

func anotherTest() int {
	var x int
	defer func() {
		x++
	}()
	x = 1
	return x
}

func main() {
	fmt.Println(test())
	fmt.Println(anotherTest())
}
